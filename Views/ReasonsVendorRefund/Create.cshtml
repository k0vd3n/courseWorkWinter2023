@model WebApplication01.Models.ReasonsVendorRefund

@{
    ViewData["Title"] = "Create";
}
@if (User.IsInRole("PurchaseManager") || User.IsInRole("Admin"))
{
    <h1>Создать</h1>

    <h4>Причины возврата поставщику</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Reason" class="control-label"></label>
                    <input asp-for="Reason" class="form-control" />
                    <span asp-validation-for="Reason" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PurchasePositionID" class="control-label"></label>
                    <select asp-for="PurchasePositionID" class="form-control" asp-items="ViewBag.PurchasePositionID"></select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Обратно к списку</a>
    </div>
}

<style>
    h1.access-denied {
        color: red;
    }
</style>
@if (!User.IsInRole("PurchaseManager") && !User.IsInRole("Admin"))
{
    <h1 class="access-denied">Access denied</h1>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
